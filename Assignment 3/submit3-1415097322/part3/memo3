Memo: SQL Injection (Part 3)

1.) FCCU's security flaw lies in the fact that the code does not validate or sanitize user input. In other words, if the FCCU users could figure out how the database tables were structured and how the queries were constructed in PHP and transmitted using POST method, they could write more SQL commands, comment out trailing query code, or even extend the WHERE clause such that the condition is always met. Essentially, attackers could log-in as other users without knowing the correct passwords; they can even fabricate transactions between different accounts or banks!

2.) To fix the flaw, I added input validation and character escaping to the FCCU.php code. For all input fields like amount, bank, account, and id that require numeric values, I would run the is_numeric() PHP function. If it turns out to include a non-numeric number, I clear the query string such that no action is taken and present a warning to the user. In normal circumstances, this is not a problem, since the values are expected to be numbers only. Furthermore, I escaped each and every variable concatenated into query strings so that any kind of SQL injection would fail when inserted.

3.1) This SQL injection breach was huge - serious enough that victims could have lost all of their money! The attacker could log in and impersonate any user, steal their confidential information like SSNs, and so on. Attackers may be able to gain root access by attempting to log on as the MySQL administrator/root via the FCCU interface (using the methods described in the exploit3.txt file), then access MySQL root privileges to execute a remote shell for full root access. However, this seems to be quite circumstantial, because if the database administrator does not have root access, the actual system's root may be well insulated from this kind of attack.

3.2) The patch should be applied in order to validate all inputs that will become a part of a query. Similarly, the inputs and queries should be sanitized and escaped of any symbols and characters with code capabilities. The SQL server should be restarted to much sure that all changes have taken place and that no attacker remains logged into someone else's account. Unfortunately, little can be done to remedy the leaked SSNs and private information. Prevention is the greatest defense from now on out, and injections should be a thing of the past after patching.

3.3) Sometimes when running FCCU.php, I was greeted with a "Can't connect to local MySQL server through socket '/var/run/mysqld/mysqld.sock' (2)" error message. Hopefully this server-sided problem does not affect my code, which previously worked. 

As before, to apply the patch, run patch < fixed.path in the /usr/lib/cgi-bin directory where FCCU.php is found.
